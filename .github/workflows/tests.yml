name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: "build"
        run: |
          make release-all
      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: release/*

  create:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: release
      - run: ./integrity.exe create -c ${{ matrix.os }}
        if: ${{ matrix.os == 'windows-latest' }}
      - run: ./integrity-linux create -c ${{ matrix.os }}
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - run: ./integrity create -c ${{ matrix.os }}
        if: ${{ matrix.os == 'macos-latest' }}
      - uses: actions/upload-artifact@v2
        with:
          name: versions
          path: VERSION-*

  validate:
    strategy:
      matrix:
        src_os: [ubuntu-latest, macos-latest, windows-latest]
        dst_os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.src_os }}
    needs:
      - create
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: versions
      - run: ./integrity.exe validate -c ${{ matrix.os }}
        if: ${{ matrix.src_os == 'windows-latest' }}
      - run: ./integrity-linux validate -c ${{ matrix.os }}
        if: ${{ matrix.src_os == 'ubuntu-latest' }}
      - run: ./integrity validate -c ${{ matrix.os }}
        if: ${{ matrix.src_os == 'macos-latest' }}
